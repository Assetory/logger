{"C:\\Users\\tella\\OneDrive\\Work\\Assetory\\Development\\logger\\src\\index.ts":{"path":"C:\\Users\\tella\\OneDrive\\Work\\Assetory\\Development\\logger\\src\\index.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":14,"column":4}},"1":{"start":{"line":3,"column":24},"end":{"line":8,"column":5}},"2":{"start":{"line":4,"column":8},"end":{"line":6,"column":110}},"3":{"start":{"line":5,"column":69},"end":{"line":5,"column":85}},"4":{"start":{"line":6,"column":30},"end":{"line":6,"column":107}},"5":{"start":{"line":6,"column":47},"end":{"line":6,"column":107}},"6":{"start":{"line":6,"column":95},"end":{"line":6,"column":107}},"7":{"start":{"line":7,"column":8},"end":{"line":7,"column":35}},"8":{"start":{"line":9,"column":4},"end":{"line":13,"column":6}},"9":{"start":{"line":10,"column":8},"end":{"line":10,"column":28}},"10":{"start":{"line":11,"column":24},"end":{"line":11,"column":45}},"11":{"start":{"line":12,"column":8},"end":{"line":12,"column":93}},"12":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":62}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":24}},"16":{"start":{"line":21,"column":15},"end":{"line":21,"column":32}},"17":{"start":{"line":22,"column":14},"end":{"line":22,"column":47}},"18":{"start":{"line":23,"column":15},"end":{"line":23,"column":49}},"19":{"start":{"line":24,"column":28},"end":{"line":258,"column":24}},"20":{"start":{"line":25,"column":4},"end":{"line":25,"column":30}},"21":{"start":{"line":32,"column":20},"end":{"line":32,"column":45}},"22":{"start":{"line":33,"column":8},"end":{"line":33,"column":38}},"23":{"start":{"line":34,"column":8},"end":{"line":34,"column":61}},"24":{"start":{"line":35,"column":8},"end":{"line":35,"column":70}},"25":{"start":{"line":36,"column":8},"end":{"line":36,"column":38}},"26":{"start":{"line":37,"column":8},"end":{"line":53,"column":9}},"27":{"start":{"line":38,"column":12},"end":{"line":38,"column":41}},"28":{"start":{"line":41,"column":12},"end":{"line":46,"column":15}},"29":{"start":{"line":47,"column":12},"end":{"line":49,"column":15}},"30":{"start":{"line":48,"column":16},"end":{"line":48,"column":63}},"31":{"start":{"line":50,"column":12},"end":{"line":52,"column":15}},"32":{"start":{"line":51,"column":16},"end":{"line":51,"column":55}},"33":{"start":{"line":54,"column":8},"end":{"line":54,"column":21}},"34":{"start":{"line":62,"column":4},"end":{"line":70,"column":6}},"35":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"36":{"start":{"line":64,"column":12},"end":{"line":64,"column":35}},"37":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"38":{"start":{"line":67,"column":12},"end":{"line":67,"column":43}},"39":{"start":{"line":69,"column":8},"end":{"line":69,"column":23}},"40":{"start":{"line":77,"column":4},"end":{"line":82,"column":6}},"41":{"start":{"line":78,"column":8},"end":{"line":81,"column":11}},"42":{"start":{"line":90,"column":4},"end":{"line":140,"column":6}},"43":{"start":{"line":91,"column":20},"end":{"line":91,"column":24}},"44":{"start":{"line":92,"column":8},"end":{"line":139,"column":10}},"45":{"start":{"line":93,"column":35},"end":{"line":93,"column":64}},"46":{"start":{"line":94,"column":32},"end":{"line":94,"column":68}},"47":{"start":{"line":95,"column":12},"end":{"line":117,"column":13}},"48":{"start":{"line":97,"column":20},"end":{"line":97,"column":49}},"49":{"start":{"line":98,"column":20},"end":{"line":98,"column":26}},"50":{"start":{"line":100,"column":20},"end":{"line":100,"column":49}},"51":{"start":{"line":101,"column":20},"end":{"line":101,"column":26}},"52":{"start":{"line":103,"column":20},"end":{"line":103,"column":48}},"53":{"start":{"line":104,"column":20},"end":{"line":104,"column":26}},"54":{"start":{"line":106,"column":20},"end":{"line":106,"column":48}},"55":{"start":{"line":107,"column":20},"end":{"line":107,"column":26}},"56":{"start":{"line":109,"column":20},"end":{"line":109,"column":49}},"57":{"start":{"line":110,"column":20},"end":{"line":110,"column":26}},"58":{"start":{"line":112,"column":20},"end":{"line":112,"column":49}},"59":{"start":{"line":113,"column":20},"end":{"line":113,"column":26}},"60":{"start":{"line":115,"column":20},"end":{"line":115,"column":48}},"61":{"start":{"line":116,"column":20},"end":{"line":116,"column":26}},"62":{"start":{"line":118,"column":12},"end":{"line":138,"column":15}},"63":{"start":{"line":119,"column":16},"end":{"line":126,"column":17}},"64":{"start":{"line":120,"column":20},"end":{"line":120,"column":45}},"65":{"start":{"line":121,"column":20},"end":{"line":123,"column":21}},"66":{"start":{"line":122,"column":24},"end":{"line":122,"column":34}},"67":{"start":{"line":124,"column":20},"end":{"line":124,"column":45}},"68":{"start":{"line":125,"column":20},"end":{"line":125,"column":27}},"69":{"start":{"line":127,"column":16},"end":{"line":137,"column":17}},"70":{"start":{"line":128,"column":20},"end":{"line":136,"column":23}},"71":{"start":{"line":129,"column":24},"end":{"line":135,"column":25}},"72":{"start":{"line":130,"column":28},"end":{"line":130,"column":53}},"73":{"start":{"line":131,"column":28},"end":{"line":133,"column":29}},"74":{"start":{"line":132,"column":32},"end":{"line":132,"column":42}},"75":{"start":{"line":134,"column":28},"end":{"line":134,"column":53}},"76":{"start":{"line":147,"column":4},"end":{"line":149,"column":6}},"77":{"start":{"line":148,"column":8},"end":{"line":148,"column":34}},"78":{"start":{"line":159,"column":4},"end":{"line":181,"column":6}},"79":{"start":{"line":160,"column":20},"end":{"line":160,"column":24}},"80":{"start":{"line":161,"column":8},"end":{"line":161,"column":42}},"81":{"start":{"line":161,"column":31},"end":{"line":161,"column":40}},"82":{"start":{"line":162,"column":8},"end":{"line":162,"column":41}},"83":{"start":{"line":162,"column":30},"end":{"line":162,"column":39}},"84":{"start":{"line":163,"column":8},"end":{"line":180,"column":11}},"85":{"start":{"line":164,"column":12},"end":{"line":179,"column":15}},"86":{"start":{"line":165,"column":16},"end":{"line":168,"column":17}},"87":{"start":{"line":166,"column":20},"end":{"line":166,"column":47}},"88":{"start":{"line":167,"column":20},"end":{"line":167,"column":41}},"89":{"start":{"line":169,"column":16},"end":{"line":178,"column":20}},"90":{"start":{"line":170,"column":20},"end":{"line":177,"column":21}},"91":{"start":{"line":171,"column":38},"end":{"line":171,"column":54}},"92":{"start":{"line":172,"column":24},"end":{"line":172,"column":74}},"93":{"start":{"line":173,"column":24},"end":{"line":173,"column":39}},"94":{"start":{"line":176,"column":24},"end":{"line":176,"column":36}},"95":{"start":{"line":188,"column":4},"end":{"line":190,"column":6}},"96":{"start":{"line":189,"column":8},"end":{"line":189,"column":37}},"97":{"start":{"line":198,"column":4},"end":{"line":201,"column":6}},"98":{"start":{"line":199,"column":8},"end":{"line":199,"column":36}},"99":{"start":{"line":200,"column":8},"end":{"line":200,"column":51}},"100":{"start":{"line":209,"column":4},"end":{"line":212,"column":6}},"101":{"start":{"line":210,"column":8},"end":{"line":210,"column":36}},"102":{"start":{"line":211,"column":8},"end":{"line":211,"column":51}},"103":{"start":{"line":220,"column":4},"end":{"line":223,"column":6}},"104":{"start":{"line":221,"column":8},"end":{"line":221,"column":35}},"105":{"start":{"line":222,"column":8},"end":{"line":222,"column":51}},"106":{"start":{"line":231,"column":4},"end":{"line":234,"column":6}},"107":{"start":{"line":232,"column":8},"end":{"line":232,"column":35}},"108":{"start":{"line":233,"column":8},"end":{"line":233,"column":51}},"109":{"start":{"line":242,"column":4},"end":{"line":245,"column":6}},"110":{"start":{"line":243,"column":8},"end":{"line":243,"column":36}},"111":{"start":{"line":244,"column":8},"end":{"line":244,"column":51}},"112":{"start":{"line":253,"column":4},"end":{"line":256,"column":6}},"113":{"start":{"line":254,"column":8},"end":{"line":254,"column":36}},"114":{"start":{"line":255,"column":8},"end":{"line":255,"column":51}},"115":{"start":{"line":257,"column":4},"end":{"line":257,"column":18}},"116":{"start":{"line":259,"column":0},"end":{"line":259,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":45},"end":{"line":2,"column":46}},"loc":{"start":{"line":2,"column":57},"end":{"line":14,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":24},"end":{"line":3,"column":25}},"loc":{"start":{"line":3,"column":40},"end":{"line":8,"column":5}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":51},"end":{"line":5,"column":52}},"loc":{"start":{"line":5,"column":67},"end":{"line":5,"column":87}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":6,"column":12},"end":{"line":6,"column":13}},"loc":{"start":{"line":6,"column":28},"end":{"line":6,"column":109}},"line":6},"4":{"name":"(anonymous_4)","decl":{"start":{"line":9,"column":11},"end":{"line":9,"column":12}},"loc":{"start":{"line":9,"column":27},"end":{"line":13,"column":5}},"line":9},"5":{"name":"__","decl":{"start":{"line":11,"column":17},"end":{"line":11,"column":19}},"loc":{"start":{"line":11,"column":22},"end":{"line":11,"column":47}},"line":11},"6":{"name":"(anonymous_6)","decl":{"start":{"line":15,"column":56},"end":{"line":15,"column":57}},"loc":{"start":{"line":15,"column":71},"end":{"line":17,"column":1}},"line":15},"7":{"name":"(anonymous_7)","decl":{"start":{"line":24,"column":28},"end":{"line":24,"column":29}},"loc":{"start":{"line":24,"column":46},"end":{"line":258,"column":1}},"line":24},"8":{"name":"Logger","decl":{"start":{"line":31,"column":13},"end":{"line":31,"column":19}},"loc":{"start":{"line":31,"column":29},"end":{"line":55,"column":5}},"line":31},"9":{"name":"(anonymous_9)","decl":{"start":{"line":47,"column":37},"end":{"line":47,"column":38}},"loc":{"start":{"line":47,"column":54},"end":{"line":49,"column":13}},"line":47},"10":{"name":"(anonymous_10)","decl":{"start":{"line":50,"column":39},"end":{"line":50,"column":40}},"loc":{"start":{"line":50,"column":51},"end":{"line":52,"column":13}},"line":50},"11":{"name":"(anonymous_11)","decl":{"start":{"line":62,"column":38},"end":{"line":62,"column":39}},"loc":{"start":{"line":62,"column":57},"end":{"line":70,"column":5}},"line":62},"12":{"name":"(anonymous_12)","decl":{"start":{"line":77,"column":36},"end":{"line":77,"column":37}},"loc":{"start":{"line":77,"column":55},"end":{"line":82,"column":5}},"line":77},"13":{"name":"(anonymous_13)","decl":{"start":{"line":90,"column":28},"end":{"line":90,"column":29}},"loc":{"start":{"line":90,"column":44},"end":{"line":140,"column":5}},"line":90},"14":{"name":"(anonymous_14)","decl":{"start":{"line":92,"column":15},"end":{"line":92,"column":16}},"loc":{"start":{"line":92,"column":34},"end":{"line":139,"column":9}},"line":92},"15":{"name":"(anonymous_15)","decl":{"start":{"line":118,"column":78},"end":{"line":118,"column":79}},"loc":{"start":{"line":118,"column":101},"end":{"line":138,"column":13}},"line":118},"16":{"name":"(anonymous_16)","decl":{"start":{"line":128,"column":105},"end":{"line":128,"column":106}},"loc":{"start":{"line":128,"column":122},"end":{"line":136,"column":21}},"line":128},"17":{"name":"(anonymous_17)","decl":{"start":{"line":147,"column":29},"end":{"line":147,"column":30}},"loc":{"start":{"line":147,"column":41},"end":{"line":149,"column":5}},"line":147},"18":{"name":"(anonymous_18)","decl":{"start":{"line":159,"column":27},"end":{"line":159,"column":28}},"loc":{"start":{"line":159,"column":54},"end":{"line":181,"column":5}},"line":159},"19":{"name":"(anonymous_19)","decl":{"start":{"line":163,"column":27},"end":{"line":163,"column":28}},"loc":{"start":{"line":163,"column":54},"end":{"line":180,"column":9}},"line":163},"20":{"name":"(anonymous_20)","decl":{"start":{"line":164,"column":75},"end":{"line":164,"column":76}},"loc":{"start":{"line":164,"column":100},"end":{"line":179,"column":13}},"line":164},"21":{"name":"(anonymous_21)","decl":{"start":{"line":169,"column":42},"end":{"line":169,"column":43}},"loc":{"start":{"line":169,"column":58},"end":{"line":178,"column":17}},"line":169},"22":{"name":"(anonymous_22)","decl":{"start":{"line":188,"column":29},"end":{"line":188,"column":30}},"loc":{"start":{"line":188,"column":41},"end":{"line":190,"column":5}},"line":188},"23":{"name":"(anonymous_23)","decl":{"start":{"line":198,"column":29},"end":{"line":198,"column":30}},"loc":{"start":{"line":198,"column":48},"end":{"line":201,"column":5}},"line":198},"24":{"name":"(anonymous_24)","decl":{"start":{"line":209,"column":29},"end":{"line":209,"column":30}},"loc":{"start":{"line":209,"column":48},"end":{"line":212,"column":5}},"line":209},"25":{"name":"(anonymous_25)","decl":{"start":{"line":220,"column":28},"end":{"line":220,"column":29}},"loc":{"start":{"line":220,"column":47},"end":{"line":223,"column":5}},"line":220},"26":{"name":"(anonymous_26)","decl":{"start":{"line":231,"column":28},"end":{"line":231,"column":29}},"loc":{"start":{"line":231,"column":47},"end":{"line":234,"column":5}},"line":231},"27":{"name":"(anonymous_27)","decl":{"start":{"line":242,"column":29},"end":{"line":242,"column":30}},"loc":{"start":{"line":242,"column":48},"end":{"line":245,"column":5}},"line":242},"28":{"name":"(anonymous_28)","decl":{"start":{"line":253,"column":29},"end":{"line":253,"column":30}},"loc":{"start":{"line":253,"column":48},"end":{"line":256,"column":5}},"line":253}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":14,"column":4}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":14,"column":4}}],"line":2},"1":{"loc":{"start":{"line":4,"column":24},"end":{"line":6,"column":109}},"type":"binary-expr","locations":[{"start":{"line":4,"column":24},"end":{"line":4,"column":45}},{"start":{"line":5,"column":13},"end":{"line":5,"column":47}},{"start":{"line":5,"column":51},"end":{"line":5,"column":87}},{"start":{"line":6,"column":12},"end":{"line":6,"column":109}}],"line":4},"2":{"loc":{"start":{"line":6,"column":47},"end":{"line":6,"column":107}},"type":"if","locations":[{"start":{"line":6,"column":47},"end":{"line":6,"column":107}},{"start":{"line":6,"column":47},"end":{"line":6,"column":107}}],"line":6},"3":{"loc":{"start":{"line":12,"column":22},"end":{"line":12,"column":92}},"type":"cond-expr","locations":[{"start":{"line":12,"column":35},"end":{"line":12,"column":51}},{"start":{"line":12,"column":55},"end":{"line":12,"column":91}}],"line":12},"4":{"loc":{"start":{"line":15,"column":22},"end":{"line":17,"column":1}},"type":"binary-expr","locations":[{"start":{"line":15,"column":23},"end":{"line":15,"column":27}},{"start":{"line":15,"column":31},"end":{"line":15,"column":51}},{"start":{"line":15,"column":56},"end":{"line":17,"column":1}}],"line":15},"5":{"loc":{"start":{"line":16,"column":11},"end":{"line":16,"column":61}},"type":"cond-expr","locations":[{"start":{"line":16,"column":37},"end":{"line":16,"column":40}},{"start":{"line":16,"column":43},"end":{"line":16,"column":61}}],"line":16},"6":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":33}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":15}},{"start":{"line":16,"column":19},"end":{"line":16,"column":33}}],"line":16},"7":{"loc":{"start":{"line":32,"column":20},"end":{"line":32,"column":45}},"type":"binary-expr","locations":[{"start":{"line":32,"column":20},"end":{"line":32,"column":37}},{"start":{"line":32,"column":41},"end":{"line":32,"column":45}}],"line":32},"8":{"loc":{"start":{"line":33,"column":24},"end":{"line":33,"column":37}},"type":"binary-expr","locations":[{"start":{"line":33,"column":24},"end":{"line":33,"column":31}},{"start":{"line":33,"column":35},"end":{"line":33,"column":37}}],"line":33},"9":{"loc":{"start":{"line":34,"column":28},"end":{"line":34,"column":60}},"type":"binary-expr","locations":[{"start":{"line":34,"column":28},"end":{"line":34,"column":47}},{"start":{"line":34,"column":51},"end":{"line":34,"column":60}}],"line":34},"10":{"loc":{"start":{"line":37,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":53,"column":9}},{"start":{"line":37,"column":8},"end":{"line":53,"column":9}}],"line":37},"11":{"loc":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},{"start":{"line":63,"column":8},"end":{"line":65,"column":9}}],"line":63},"12":{"loc":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},{"start":{"line":66,"column":8},"end":{"line":68,"column":9}}],"line":66},"13":{"loc":{"start":{"line":95,"column":12},"end":{"line":117,"column":13}},"type":"switch","locations":[{"start":{"line":96,"column":16},"end":{"line":98,"column":26}},{"start":{"line":99,"column":16},"end":{"line":101,"column":26}},{"start":{"line":102,"column":16},"end":{"line":104,"column":26}},{"start":{"line":105,"column":16},"end":{"line":107,"column":26}},{"start":{"line":108,"column":16},"end":{"line":110,"column":26}},{"start":{"line":111,"column":16},"end":{"line":113,"column":26}},{"start":{"line":114,"column":16},"end":{"line":116,"column":26}}],"line":95},"14":{"loc":{"start":{"line":119,"column":16},"end":{"line":126,"column":17}},"type":"if","locations":[{"start":{"line":119,"column":16},"end":{"line":126,"column":17}},{"start":{"line":119,"column":16},"end":{"line":126,"column":17}}],"line":119},"15":{"loc":{"start":{"line":121,"column":20},"end":{"line":123,"column":21}},"type":"if","locations":[{"start":{"line":121,"column":20},"end":{"line":123,"column":21}},{"start":{"line":121,"column":20},"end":{"line":123,"column":21}}],"line":121},"16":{"loc":{"start":{"line":127,"column":16},"end":{"line":137,"column":17}},"type":"if","locations":[{"start":{"line":127,"column":16},"end":{"line":137,"column":17}},{"start":{"line":127,"column":16},"end":{"line":137,"column":17}}],"line":127},"17":{"loc":{"start":{"line":127,"column":20},"end":{"line":127,"column":83}},"type":"binary-expr","locations":[{"start":{"line":127,"column":20},"end":{"line":127,"column":45}},{"start":{"line":127,"column":49},"end":{"line":127,"column":83}}],"line":127},"18":{"loc":{"start":{"line":129,"column":24},"end":{"line":135,"column":25}},"type":"if","locations":[{"start":{"line":129,"column":24},"end":{"line":135,"column":25}},{"start":{"line":129,"column":24},"end":{"line":135,"column":25}}],"line":129},"19":{"loc":{"start":{"line":131,"column":28},"end":{"line":133,"column":29}},"type":"if","locations":[{"start":{"line":131,"column":28},"end":{"line":133,"column":29}},{"start":{"line":131,"column":28},"end":{"line":133,"column":29}}],"line":131},"20":{"loc":{"start":{"line":161,"column":8},"end":{"line":161,"column":42}},"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":42}},{"start":{"line":161,"column":8},"end":{"line":161,"column":42}}],"line":161},"21":{"loc":{"start":{"line":162,"column":8},"end":{"line":162,"column":41}},"type":"if","locations":[{"start":{"line":162,"column":8},"end":{"line":162,"column":41}},{"start":{"line":162,"column":8},"end":{"line":162,"column":41}}],"line":162},"22":{"loc":{"start":{"line":165,"column":16},"end":{"line":168,"column":17}},"type":"if","locations":[{"start":{"line":165,"column":16},"end":{"line":168,"column":17}},{"start":{"line":165,"column":16},"end":{"line":168,"column":17}}],"line":165}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":1,"98":0,"99":0,"100":1,"101":0,"102":0,"103":1,"104":0,"105":0,"106":1,"107":0,"108":0,"109":1,"110":0,"111":0,"112":1,"113":0,"114":0,"115":1,"116":1},"f":{"0":1,"1":1,"2":0,"3":0,"4":1,"5":1,"6":2,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"0":[1,1,1],"1":[1,0,0,0],"2":[0,0],"3":[0,1],"4":[1,1,1],"5":[0,2],"6":[2,2],"7":[1,1],"8":[1,0],"9":[1,1],"10":[0,1],"11":[0,0],"12":[0,0],"13":[0,0,0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/tella/OneDrive/Work/Assetory/Development/logger/src/index.ts","sources":["C:/Users/tella/OneDrive/Work/Assetory/Development/logger/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\r\nimport { EventEmitter } from 'events';\r\nimport redis, { RedisClient } from 'redis';\r\nimport log4js from 'log4js';\r\nimport { IMessageType } from './IMessageType';\r\n\r\nexport class Logger extends EventEmitter\r\n{\r\n    private options : any;\r\n    client : RedisClient;\r\n    private _logger : log4js.Logger;\r\n    private serviceName : string;\r\n\r\n    /**\r\n     * @constructor\r\n     * @example const logger = new Logger({});\r\n     * @param  { any } options Options for constructor population.\r\n     */\r\n    constructor(options : any)\r\n    {\r\n        super();\r\n        \r\n        this.options = options || {};\r\n        this.serviceName = options.serviceName || 'default';\r\n        this._logger = log4js.getLogger(this.serviceName);\r\n\r\n        this._logger.level = 'debug';\r\n        \r\n        if (options.redis instanceof redis.RedisClient)\r\n        {\r\n            this.client = options.redis;\r\n        }\r\n        else\r\n        {\r\n            this.client = redis.createClient(\r\n                this.options.connectOptions.port,\r\n                this.options.connectOptions.host,\r\n                {\r\n                    auth_pass: this.options.connectOptions.password,\r\n                    tls:\r\n                    {\r\n                        servername: this.options.connectOptions.servername,\r\n                    },\r\n                }\r\n            );\r\n\r\n            this.client.on('error', (error) =>\r\n            {\r\n                this._logger.error('Database Error: ', error);\r\n            });\r\n\r\n            this.client.on('connect', () =>\r\n            {\r\n                this._logger.info('logger connected');\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method _formatContent\r\n     * @private\r\n     * @description Format content according to datatype\r\n     * @param { any } content Content of log message.\r\n     */\r\n    private _formatContent (content : any)\r\n    {\r\n        if(content instanceof Error)\r\n        {\r\n            return content.message;\r\n        }\r\n        if(typeof content === 'object')\r\n        {\r\n            return JSON.stringify(content);\r\n        }\r\n\r\n        return content;\r\n    }\r\n\r\n    /**\r\n     * @method _packContent\r\n     * @private\r\n     * @description Unifies content informations as JSON.\r\n     * @param { any } content Content of log message.\r\n     */\r\n    private _packContent (content : any)\r\n    {\r\n        return JSON.stringify({\r\n            content: content,\r\n            timestamp: Math.round(Date.now() / 1000),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @method _log\r\n     * @private \r\n     * @description Creates a log message containing of type and content message.\r\n     * @param { string } type Type of log message.\r\n     * @param { any } content Content of log message.\r\n     */\r\n    private _log(type : string)\r\n    {\r\n        return (content : any) =>\r\n        {\r\n            const formattedContent = this._formatContent(content);\r\n            const packedContent = this._packContent(formattedContent);\r\n\r\n            switch (type) {\r\n                case 'fatal':\r\n                    this._logger.fatal(content);\r\n                    break;\r\n                case 'error':\r\n                    this._logger.error(content);\r\n                    break;\r\n                case 'warn':\r\n                    this._logger.warn(content);\r\n                    break;\r\n                case 'info':\r\n                    this._logger.info(content);\r\n                    break;\r\n                case 'debug':\r\n                    this._logger.debug(content);\r\n                    break;\r\n                case 'trace':\r\n                    this._logger.trace(content);\r\n                    break;\r\n                default:\r\n                    this._logger.info(content);\r\n                    break;\r\n            }\r\n\r\n            this.client.lpush(`${this.serviceName}:${type}`, packedContent, (err, result) =>\r\n            {\r\n                if (err)\r\n                {\r\n                    this._logger.error(err);\r\n\r\n                    if (this.options.throwErrors)\r\n                    {\r\n                        throw err;\r\n                    }\r\n\r\n                    this.emit('error', err);\r\n\r\n                    return;\r\n                }\r\n                if (this.options.limitAmount && result > this.options.limitAmount)\r\n                {\r\n                    this.client.ltrim(`${this.serviceName}:${type}`, 0, this.options.limitAmount - 1, (error) =>\r\n                    {\r\n                        if (error)\r\n                        {\r\n                            this._logger.error(err);\r\n                            \r\n                            if (this.options.throwErrors)\r\n                            {\r\n                                throw err;\r\n                            }\r\n\r\n                            this.emit('error', err);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @method close\r\n     * @description Closes redis database connection.\r\n     * @example logger.close();\r\n     * @returns { boolean }\r\n     */\r\n    close() : boolean\r\n    {\r\n        return this.client.quit();\r\n    }\r\n\r\n    /**\r\n     * @method all\r\n     * @description Returns all log messages of specified type.\r\n     * @param { string } type Type of message.\r\n     * @param { number= } from Indicator from where messages are shown.\r\n     * @param { number= } end Indicator to where messages are shown.\r\n     * @example logger.all('info');\r\n     * @returns { IMessageType[] }\r\n     */\r\n    all(type : string, from : number = 0, end : number = -1)\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            this.client.lrange(`${this.serviceName}:${type}`, from, end, (error, result) =>\r\n            {\r\n                if (error)\r\n                {\r\n                    this._logger.error(error);\r\n                    \r\n                    return reject(error);\r\n                }\r\n\r\n                return resolve(result.map((item) =>\r\n                {\r\n                    try\r\n                    {\r\n                        const content = JSON.parse(item);\r\n\r\n                        content.time = new Date(content.timestamp * 1000);\r\n\r\n                        return content;\r\n                    }\r\n                    catch (e)\r\n                    {\r\n                        return item;\r\n                    }\r\n                }));\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @method flush\r\n     * @description Deletes all log messages in database.\r\n     * @example logger.flush();\r\n     * @returns { boolean }\r\n     */\r\n    flush() : boolean\r\n    {\r\n        return this.client.flushdb();\r\n    }\r\n\r\n    /**\r\n     * @method fatal\r\n     * @description Creates a message of type fatal.\r\n     * @param { string } content Content of log message.\r\n     * @example logger.fatal('Hello world!');\r\n     * @returns { IMessageType }\r\n     */\r\n    fatal(content : string) : IMessageType\r\n    {\r\n        this._log('fatal')(content);\r\n\r\n        return { type: 'fatal', message: content };\r\n    }\r\n\r\n    /**\r\n     * @method error\r\n     * @description Creates a message of type error.\r\n     * @param { string } content Content of log message.\r\n     * @example logger.error('Hello world!');\r\n     * @returns { IMessageType }\r\n     */\r\n    error(content : string) : IMessageType\r\n    {\r\n        this._log('error')(content);\r\n\r\n        return { type: 'fatal', message: content };\r\n    }\r\n\r\n    /**\r\n     * @method warn\r\n     * @description Creates a message of type warn.\r\n     * @param { string } content Content of log message.\r\n     * @example logger.warn('Hello world!');\r\n     * @returns { IMessageType }\r\n     */\r\n    warn(content : string) : IMessageType\r\n    {\r\n        this._log('warn')(content);\r\n\r\n        return { type: 'fatal', message: content };\r\n    }\r\n\r\n    /**\r\n     * @method info\r\n     * @description Creates a message of type info.\r\n     * @param { string } content Content of log message.\r\n     * @example logger.info('Hello world!');\r\n     * @returns { IMessageType }\r\n     */\r\n    info(content : string) : IMessageType\r\n    {\r\n        this._log('info')(content);\r\n\r\n        return { type: 'fatal', message: content };\r\n    }\r\n\r\n    /**\r\n     * @method debug\r\n     * @description Creates a message of type debug.\r\n     * @param { string } content Content of log message.\r\n     * @example logger.debug('Hello world!');\r\n     * @returns { IMessageType }\r\n     */\r\n    debug(content : string) : IMessageType\r\n    {\r\n        this._log('debug')(content);\r\n\r\n        return { type: 'fatal', message: content };\r\n    }\r\n\r\n    /**\r\n     * @method trace\r\n     * @description Creates a message of type trace.\r\n     * @param { string } content Content of log message.\r\n     * @example logger.trace('Hello world!');\r\n     * @returns { IMessageType }\r\n     */\r\n    trace(content : string) : IMessageType\r\n    {\r\n        this._log('trace')(content);\r\n\r\n        return { type: 'fatal', message: content };\r\n    }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b2d815e7a7c6d91e157ece8a093543c682fb60fd"}}